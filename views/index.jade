extends layout

block jumbotron
	div.pt-perspective#pt-main
		- var scnt = -1;
		each s in config.screens
			- scnt++;
			div.jumbotron.index-jumbotron.pt-page(class="pt-page-#{scnt}",data-hold_for="#{s.hold_for}")
				div.container
					div.row.text-center#content

	script(type="text/javascript").
		var transitionnr = 0;
		var pageTransition;
		var currPage = 0;

		var nrt;
		function noReactionTimeout(id) {
			displayScreen(id);
		}

		function displayScreen(_id) {
			nrt = setTimeout("noReactionTimeout(" + (_id+1) + ")", 60 * 1000);
			
			(function(id) {
				$.get("\"screens\"" + id, function (data) {
					clearTimeout(nrt);
					$(".pt-page-" + id + " #content").html(data);

					if (id > 0) {
						if (#{config.animated_transitions}) {
							var transitions = [36, 32, 35, 37];
							pageTransition.nextPage(transitions[transitionnr], function() {
								incrementPage();
								transitionnr = (transitionnr + 1) % transitions.length;
							});
						} else {
							$(".pt-page-" + currPage).removeClass("pt-page-current");
							incrementPage();
							$(".pt-page-" + currPage).addClass("pt-page-current");
						}
					}

					var hold_for = parseInt( $(".pt-page-" + id).attr("data-hold_for") );
					var nextId = (id + 1) % #{config.screens.length};
					setTimeout("displayScreen(" + nextId + ")", hold_for);
				});
			})(_id);
		}

		function incrementPage() {
			currPage = (currPage+1) % #{config.screens.length};
		}

		$( document ).on( "load", function() {
			pageTransition = PageTransitions();
			pageTransition.init();
			displayScreen(0);
		});
